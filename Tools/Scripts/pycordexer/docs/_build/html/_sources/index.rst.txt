.. PyCordexer documentation master file, created by
   sphinx-quickstart on Mon Feb 19 17:42:51 2018.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

========================
PyCordexer documentation
========================

.. contents:: Table of Contents
    :depth: 2
    :backlinks: none


Introduction
==============

The *PyCordexer* scripts have been developed to ease the RegCM Model User
in converting variables in RegCM model output files into the netCDF format
respecting the CORDEX experiment conventions.

The scripts rely on a series of external JSON-encoded files (stored in the
``variables/`` directory), containing instructions to apply to variables in
the process of extraction.

The operations encoded in the JSON files are interpreted into python using the
instructions defined in the ``utilities/pycordexer_methods.py`` script.
This documentation introduces the operations, or "Methods", currently
available inside the script.

|

Note that each operation is written as a class, and the actual code to be
executed is inside the ``__call__`` method, according to the implementation
design.
Each variable to extract needs to apply a sequence of methods: to avoid running
out of memory, each operation is performed only when needed, in a sort of
"cascade" of operations.

Each actual Method derives from an abstract Method object, and returns a
``Variable`` object (defined in ``utilities/variables.py``), to continue the
chain of Methods. The ``Action`` class is not reported here, because it is used
only in the ``pycordexer.py`` to build the chain.



PyCordexer Base Methods
===========================

The following are Base Methods, used to create the actual Methods, and
which are to be used to create new methods in the future.

.. autoclass:: utilities.pycordexer_methods.Method


.. automodule:: utilities.pycordexer_methods
    :members: ActionStarter, Filter
    :show-inheritance:


PyCordexer Actual Methods
=========================

The following are the Methods that can be used to manipulate RegCM variables.

Inside ``variables/cordex_vars/`` there is a JSON file for each RegCM variable:
each JSON contains a sequence of Methods to be applied to the original variable
to produce it.

The Methods are presented in alphabetical order; when not specified, each method
returns a ``Variable`` object.


.. The following line is just a placeholder to increase the break before the list of Methods.

|

.. automodule:: utilities.pycordexer_methods
    :members:
    :undoc-members:
    :show-inheritance:
    :exclude-members: Action, ActionStarter, Method, Filter, get_methods


Utilities
=========

.. autofunction:: utilities.pycordexer_methods.get_methods


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
