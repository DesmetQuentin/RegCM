--- clm3.5/src/main/initializeMod.F90	2007-05-02 20:53:49.000000000 +0200
+++ clm3.5_regcm/src/main/initializeMod.F90	2010-01-22 00:10:30.000000000 +0100
@@ -47,7 +47,7 @@
 ! !IROUTINE: initialize1
 !
 ! !INTERFACE:
-  subroutine initialize1( CCSMInit )
+  subroutine initialize1( CCSMInit)
 !
 ! !DESCRIPTION:
 ! Land model initialization.
@@ -77,13 +77,26 @@
     use domainMod , only : latlon_check, latlon_setsame
     use areaMod   , only : map_setgatm
     use surfrdMod , only : surfrd,surfrd_get_grid,surfrd_get_frac,&
-                           surfrd_get_topo, surfrd_get_latlon
+                           surfrd_get_topo, surfrd_get_latlon,&
+		           rcmsurfrd_get_topo, rcmsurfrd_get_frac,&
+                           rcmsurfrd_get_latlon,rcmsurfrd_get_grid,&
+                           rcmsurfrd !abt
     use clm_varctl, only : fsurdat, fatmgrid, fatmlndfrc, &
-                           fatmtopo, flndtopo
+                           fatmtopo, flndtopo, mksrf_offline_fnavyoro, &
+                           mksrf_furban,mksrf_fglacier,mksrf_fsoitex, &
+                           mksrf_flanwat,mksrf_fvegtyp !abt
     use controlMod, only : control_init, control_print
     use shr_InputInfo_mod, only : shr_InputInfo_initType
+    use clm_varsur, only : landmask  !abt rcm
 !
 ! !ARGUMENTS:
+#ifdef MPP1
+    include '../../../regcm.param2'
+    include '../../../Common2/clm.cb'
+#else
+    include '../../../regcm.param'
+    include '../../../Commons/clm.cb'
+#endif
     type(shr_InputInfo_initType), intent(in), optional :: CCSMInit
 !
 ! !REVISION HISTORY:
@@ -101,6 +114,8 @@
     integer  :: begg_atm, endg_atm    ! proc beg and ending gridcell indices
     type(domain_type) :: lgdomain   ! generic "global" domain for i/o
     type(domain_type) :: agdomain   ! generic "global" domain for i/o
+
+    integer :: nns,nni,nnj,llat,llon  !indices abt rcm
 !-----------------------------------------------------------------------
 
     ! ------------------------------------------------------------------------
@@ -137,8 +152,17 @@
 #endif
     endif
 
-    call surfrd_get_latlon(alatlon, fatmgrid, amask, fatmlndfrc)
+
+!!!!!! abt rcm below
+
+!    call surfrd_get_latlon(alatlon, fatmgrid, amask, fatmlndfrc)
+!    call latlon_check(alatlon)
+    call rcmsurfrd_get_latlon(alatlon,mksrf_offline_fnavyoro,amask)
     call latlon_check(alatlon)
+
+!!!!!! abt rcm above
+
+
     if (masterproc) then
        write (6,*) 'amask size/min/max ',size(amask),minval(amask),maxval(amask)
 #ifndef UNICOSMP
@@ -153,11 +177,15 @@
 #endif
     endif
 
-    call surfrd_get_latlon(llatlon, fsurdat, pftm, pftmflag=.true.)
+!!!!! abt rcm below
+
+!    call surfrd_get_latlon(llatlon, fsurdat, pftm, pftmflag=.true.)
+!    call latlon_check(llatlon)
+
+    call rcmsurfrd_get_latlon(llatlon,mksrf_offline_fnavyoro, pftm, pftmflag=.true.)
     call latlon_check(llatlon)
 
-    lsmlon = llatlon%ni
-    lsmlat = llatlon%nj
+!!!!! abt rcm above
 
     if (llatlon%ni < alatlon%ni .or. llatlon%nj < alatlon%nj) then
        if (masterproc) write(6,*) 'ERROR llatlon size > alatlon size: ', &
@@ -209,11 +237,15 @@
        call map_setgatm_UNITY(gatm,alatlon,amask)
     endif
 #endif
+
+
     call map_setgatm(gatm,alatlon,llatlon,amask,pftm)
 
+
     ! Initialize clump and processor decomposition 
     call decomp_lnd_init(alatlon%ns,alatlon%ni,alatlon%nj,llatlon%ns,llatlon%ni,llatlon%nj)
 
+
     !--- Read atm grid -------------------------------------------------------------------
 
     if (masterproc) then
@@ -222,7 +254,13 @@
        call shr_sys_flush(6)
 #endif
     endif
-    call surfrd_get_grid(agdomain, fatmgrid)
+
+!!!!!!!! abt rcm below
+
+!    call surfrd_get_grid(agdomain, fatmgrid)
+    call rcmsurfrd_get_grid(agdomain,mksrf_offline_fnavyoro)
+
+
 
     if (masterproc) then
        write (6,*) 'Attempting to read atm landfrac from fatmlndfrc'
@@ -230,17 +268,26 @@
        call shr_sys_flush(6)
 #endif
     endif
-    call surfrd_get_frac(agdomain, fatmlndfrc)
 
-    if (fatmtopo /= " ") then
+!    call surfrd_get_frac(agdomain, fatmlndfrc)
+    call rcmsurfrd_get_frac(agdomain, mksrf_offline_fnavyoro)
+
+!    if (fatmtopo /= " ") then
     if (masterproc) then
        write (6,*) 'Attempting to read atm topo from fatmtopo'
 #ifndef UNICOSMP
        call shr_sys_flush(6)
 #endif
     endif
-    call surfrd_get_topo(agdomain, fatmtopo)
-    endif
+!    call surfrd_get_topo(agdomain, fatmtopo)
+    call rcmsurfrd_get_topo(agdomain, mksrf_offline_fnavyoro)
+
+
+!    endif
+
+!!!!!!!!! abt rcm above
+
+
 
     if (masterproc) then
        write(6,*) 'agdomain status:'
@@ -265,7 +312,12 @@
        call shr_sys_flush(6)
 #endif
     endif
-    call surfrd_get_grid(lgdomain, fsurdat)
+	
+! abt rcm below	
+!    call surfrd_get_grid(lgdomain, fsurdat)
+    call rcmsurfrd_get_grid(lgdomain,mksrf_offline_fnavyoro)
+
+! abt rcm above
 
     if (flndtopo /= " ") then
     if (masterproc) then
@@ -274,7 +326,13 @@
        call shr_sys_flush(6)
 #endif
     endif
-    call surfrd_get_topo(lgdomain, flndtopo)
+
+
+! abt rcm below
+!    call surfrd_get_topo(lgdomain, flndtopo)
+    call rcmsurfrd_get_topo(lgdomain, mksrf_offline_fnavyoro)
+! abt rcm above
+
     endif
 
     if (masterproc) then
@@ -288,6 +346,7 @@
        call domain_check(ldomain)
     endif
 
+
     call domain_clean(lgdomain)
 
     !--- overwrite ldomain if same grids --------------------------------------------
@@ -297,6 +356,7 @@
        call domain_setsame(adomain,ldomain)
     endif
 
+
     ! Allocate surface grid dynamic memory (for wtxy and vegxy arrays)
 
     call get_proc_bounds    (begg    , endg)
@@ -307,10 +367,15 @@
        write(6,*)'initialize allocation error'; call endrun()
     endif
 
+
+
     ! Read surface dataset and set up vegetation type [vegxy] and 
     ! weight [wtxy] arrays for [maxpatch] subgrid patches.
-    
-    call surfrd (fsurdat, ldomain)
+!  abt rcm below    
+!    call surfrd (fsurdat, ldomain)
+    call rcmsurfrd (mksrf_flanwat,mksrf_fglacier,mksrf_furban,   &
+                    mksrf_fsoitex,mksrf_fvegtyp,ldomain)
+!  abt rcm below
 
     call decomp_glcp_init(alatlon%ns,alatlon%ni,alatlon%nj,llatlon%ns,llatlon%ni,llatlon%nj)
 
@@ -383,6 +448,9 @@
     use clm_time_manager, only : get_curr_date, get_nstep, advance_timestep, &
                                  timemgr_init, timemgr_restart_io, timemgr_restart
     use fileutils       , only : getfil
+#if (defined VOC)
+    use clm_varvoc      , only : n_start
+#endif
 !
 ! !ARGUMENTS:
    type(eshr_timeMgr_clockType), optional, intent(IN) :: SyncClock ! Synchronization clock
@@ -594,11 +662,11 @@
     ! ------------------------------------------------------------------------
     ! Start offline run at nstep = 1
     ! ------------------------------------------------------------------------
-
-#if (defined OFFLINE)
-    if (nsrest == 0) call advance_timestep()
-#endif
-
+! c abt rcm below
+!#if (defined OFFLINE)
+!    if (nsrest == 0) call advance_timestep()
+!#endif
+! c abt rcm above !!!! advance timestep later
     ! ------------------------------------------------------------------------
     ! Initialization of model parameterizations that are needed after
     ! restart file is read in
@@ -624,7 +692,8 @@
     ! restart data read above. Note that routine htapes_build needs time manager 
     ! information, so this call must be made after the restart information has been read.
 
-    if (nsrest == 0 .or. nsrest == 3) call htapes_build ()
+!abt commented    if (nsrest == 0 .or. nsrest == 3) call htapes_build ()
+    call htapes_build ()
 
     ! Initialize clmtype variables that are obtained from accumulated fields.
     ! This routine is called in an initial run at nstep=0 for cam and csm mode
@@ -662,6 +731,12 @@
 !$OMP END PARALLEL DO
 #endif
 
+!abt added below
+#if (defined VOC)
+    n_start = get_nstep()
+#endif
+!abt added above
+
     ! End initialization
 
     if (masterproc) then
diff -x .svn -Naurb clm3.5/src/main/iniTimeConst.F90 clm3.5_regcm/src/main/iniTimeConst.F90
