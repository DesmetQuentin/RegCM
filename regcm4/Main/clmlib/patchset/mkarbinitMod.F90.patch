--- orig/mkarbinitMod.F90	2010-03-10 15:16:03.000000000 +0100
+++ patchd/mkarbinitMod.F90	2010-03-10 14:44:04.641094542 +0100
@@ -27,7 +27,13 @@
     use clm_varcon   , only : bdsno, istice, istwet, istsoil, denice, denh2o, spval, sb
     use spmdMod      , only : masterproc
     use decompMod    , only : get_proc_bounds
-!
+!!abt added below rcm
+    use clm_varsur   , only : satbrt_clm,init_tgb
+    use clm_varpar   , only : lsmlon,lsmlat
+    use clm_varsur   , only : slmo,iexsol,xmopor 
+    use decompMod    , only : ldecomp
+    use pftvarcon    , only : smpsc
+!!abt above
 ! !ARGUMENTS:
     implicit none
 !
@@ -83,6 +89,13 @@
     integer :: begl, endl   ! per-proc beginning and ending landunit indices
     integer :: begg, endg   ! per-proc gridcell ending gridcell indices
     real(r8):: vwc,psi      ! for calculating soilpsi
+!!abt added below
+    integer :: ii,jj,g,nveg,tex,is,dtime
+    real(r8), allocatable :: temp_veg(:,:)  !temporary array for storing BATS landuse type
+    real(r8), allocatable :: temp_veg1(:,:) !temporary array for storing BATS landuse type
+    integer , pointer :: cgridcell(:)       !gridcell index of corresponding column
+    integer , pointer :: ivt(:)             ! vegetation type
+!!abt added above
 !-----------------------------------------------------------------------
 
     if ( masterproc ) write (6,*) 'Setting initial data to non-spun up values'
@@ -93,7 +106,10 @@
     lakpoi     => clm3%g%l%lakpoi
 
     ! Assign local pointers to derived subtypes components (column-level)
-
+!!abt added below
+    cgridcell  => clm3%g%l%c%gridcell
+    ivt        => clm3%g%l%c%p%itype
+!!abt added above
     clandunit  => clm3%g%l%c%landunit
     snl        => clm3%g%l%c%cps%snl
     dz         => clm3%g%l%c%cps%dz
@@ -145,6 +161,23 @@
        !clm3%g%l%c%p%pps%frac_veg_nosno_alb(p) = 0._r8
     end do
 
+!!!abt added below
+!!! convert from 2d BATS types to 1d at gridcell level !!!
+!!!         also convert from meters to kg/m^2         !!!
+
+    allocate(temp_veg(lsmlat,lsmlon))
+    allocate(temp_veg1(lsmlat,lsmlon))
+
+    do jj = 1,lsmlat
+    do ii = 1,lsmlon
+        g = (jj-1)*lsmlon + ii
+        temp_veg(jj,ii)  = satbrt_clm(jj,ii)
+        temp_veg1(jj,ii) = satbrt_clm(jj,ii)
+    enddo
+    enddo
+
+!!!abt above added
+
 !dir$ concurrent
 !cdir nodep
     do c = begc,endc
@@ -185,38 +218,69 @@
 !dir$ concurrent
 !cdir nodep
     do c = begc,endc
+       g = cgridcell(c) !abt added
+      ii = ldecomp%gdc2i(g) !abt
+      jj = ldecomp%gdc2j(g) !abt
+       l = clandunit(c)
 
        t_soisno(c,-nlevsno+1:nlevsoi) = spval
        t_lake(c,1:nlevlak) = spval
 
-       l = clandunit(c)
+!abt original code below       if (.not. lakpoi(l)) then  !not lake
+!          t_soisno(c,-nlevsno+1:0) = spval
+!          if (snl(c) < 0) then    !snow layer temperatures
+!             do j = snl(c)+1, 0
+!                t_soisno(c,j) = 250._r8
+!             enddo
+!          endif
+!          if (ltype(l) == istice) then
+!             do j = 1, nlevsoi
+!                t_soisno(c,j) = 250._r8
+!             end do
+!          else if (ltype(l) == istwet) then
+!             do j = 1, nlevsoi
+!                t_soisno(c,j) = 277._r8
+!             end do
+!          else
+!             do j = 1, nlevsoi
+!                t_soisno(c,j) = 283._r8
+!             end do
+!          endif
+!          t_grnd(c) = t_soisno(c,snl(c)+1)
+!       else                     !lake
+!          t_lake(c,1:nlevlak) = 277._r8
+!          t_grnd(c) = t_lake(c,1)
+!abt original code above       endif
+
+!abt below !!edit initialization to match BATS
        if (.not. lakpoi(l)) then  !not lake
           t_soisno(c,-nlevsno+1:0) = spval
           if (snl(c) < 0) then    !snow layer temperatures
              do j = snl(c)+1, 0
-                t_soisno(c,j) = 250._r8
+                t_soisno(c,j) = init_tgb(jj,ii)
              enddo
           endif
           if (ltype(l) == istice) then
              do j = 1, nlevsoi
-                t_soisno(c,j) = 250._r8
+                t_soisno(c,j) = init_tgb(jj,ii)
              end do
           else if (ltype(l) == istwet) then
              do j = 1, nlevsoi
-                t_soisno(c,j) = 277._r8
+                t_soisno(c,j) = init_tgb(jj,ii)
              end do
           else
              do j = 1, nlevsoi
-                t_soisno(c,j) = 283._r8
+                t_soisno(c,j) = init_tgb(jj,ii)
              end do
           endif
           t_grnd(c) = t_soisno(c,snl(c)+1)
        else                     !lake
-          t_lake(c,1:nlevlak) = 277._r8
+          t_lake(c,1:nlevlak) = init_tgb(jj,ii)
           t_grnd(c) = t_lake(c,1)
        endif
 
     end do
+!abt above !!edit initialization to match BATS
 
 !dir$ concurrent
 !cdir nodep
@@ -256,24 +320,58 @@
 !cdir nodep
        do c = begc,endc
           l = clandunit(c)
+          g = cgridcell(c) !abt added
+         ii = ldecomp%gdc2i(g) !abt
+         jj = ldecomp%gdc2j(g) !abt
+
           if (.not. lakpoi(l)) then  !not lake
 
-             ! volumetric water
-             if (ltype(l) == istsoil) then
-                h2osoi_vol(c,j) = 0.4_r8
+!abt original below             ! volumetric water
+!             if (ltype(l) == istsoil) then
+!                h2osoi_vol(c,j) = 0.4_r8
+!             else
+!                h2osoi_vol(c,j) = 1.0_r8
+!             endif
+!             h2osoi_vol(c,j) = min(h2osoi_vol(c,j),watsat(c,j))
+
+!             ! soil layers
+!             if (t_soisno(c,j) <= SHR_CONST_TKFRZ) then
+!                h2osoi_ice(c,j)  = dz(c,j)*denice*h2osoi_vol(c,j)
+!                h2osoi_liq(c,j) = 0._r8
+!             else
+!                h2osoi_ice(c,j) = 0._r8
+!                h2osoi_liq(c,j) = dz(c,j)*denh2o*h2osoi_vol(c,j)
+!abt original above             endif
+
+!abt added section below
+             if(temp_veg(jj,ii).lt.15.1 .and. temp_veg(jj,ii).gt.13.9) then
+                temp_veg(jj,ii) = 0
+             endif
+
+             nveg = nint(temp_veg(jj,ii))
+             if(nveg.eq.0) then
+                nveg = 15
              else
-                h2osoi_vol(c,j) = 1.0_r8
+                nveg = nveg
              endif
-             h2osoi_vol(c,j) = min(h2osoi_vol(c,j),watsat(c,j))
+
+             tex = iexsol(nveg)
+             is  = nint(temp_veg1(jj,ii))
+
+             h2osoi_vol(c,j) = xmopor(tex) * slmo(is)
 
              ! soil layers
-             if (t_soisno(c,j) <= SHR_CONST_TKFRZ) then
-                h2osoi_ice(c,j)  = dz(c,j)*denice*h2osoi_vol(c,j)
-                h2osoi_liq(c,j) = 0._r8
-             else
+!             if (t_soisno(c,j) <= SHR_CONST_TKFRZ) then
+!                h2osoi_ice(c,j)  = dz(c,j)*denice*h2osoi_vol(c,j)
+!                h2osoi_liq(c,j) = 0._r8
+!             else
                 h2osoi_ice(c,j) = 0._r8
                 h2osoi_liq(c,j) = dz(c,j)*denh2o*h2osoi_vol(c,j)
-             endif
+!             endif
+!Initialization with no ice to match BATS initialization 
+!abt added section above
+   
+
 
 #if (defined CN)
              ! soil water potential (added 10/21/03, PET)
@@ -293,6 +391,10 @@
 
     end do
 
+!!!abt added below
+   deallocate(temp_veg1,temp_veg)
+!!!abt added above
+
     ! Set snow
 
     do j = -nlevsno+1, 0
