C::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
C    This file is part of RegCM model.
C
C    RegCM model is free software: you can redistribute it and/or modify
C    it under the terms of the GNU General Public License as published by
C    the Free Software Foundation, either version 3 of the License, or
C    (at your option) any later version.
C
C    RegCM model is distributed in the hope that it will be useful,
C    but WITHOUT ANY WARRANTY; without even the implied warranty of
C    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
C    GNU General Public License for more details.
C
C    You should have received a copy of the GNU General Public License
C    along with RegCM model.  If not, see <http://www.gnu.org/licenses/>.
C
C::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

      real(kind=8)  psc
      real(kind=8)  uc
      real(kind=8)  vc
      real(kind=8)  tc
      real(kind=8)  qvc
      real(kind=8)  qcc
      real(kind=8)  u
      real(kind=8)  v
      real(kind=8)  t
      real(kind=8)  qv
      real(kind=8)  qc
      real(kind=8)  qdot
      real(kind=8)  pdota
      real(kind=8)  pten
      real(kind=8)  uten
      real(kind=8)  vten
      real(kind=8)  tten
      real(kind=8)  qvten
      real(kind=8)  qcten
      real(kind=8)  psd
      real(kind=8)  td
      real(kind=8)  phi
      real(kind=8)  xkc
      real(kind=8)  difft
      real(kind=8)  diffq
      real(kind=8)  difuu
      real(kind=8)  difuv
      real(kind=8)  omega
      real(kind=8)  qvcs

      real(kind=8)  chi, chiten, chic

#ifdef MPP1

      common/cvaria/ psc(ix,jxp), uc(ix,kx,jxp), vc(ix,kx,jxp),
     &            tc(ix,kx,jxp),qvc(ix,kx,jxp),qcc(ix,kx,jxp),
     &             u(ix,kx,0:jxp+1),  v(ix,kx,0:jxp+1),
     &             t(ix,kx,0:jxp+1),
     &            qv(ix,kx,0:jxp+1), qc(ix,kx,0:jxp+1),
     &            qdot(ix,kxp1,0:jxp+1),
     &          pdota(ix,jxp),pten(ix,jxp),
     &          uten(ix,kx,jxp), vten(ix,kx,jxp), tten(ix,kx,jxp),
     &         qvten(ix,kx,jxp),qcten(ix,kx,jxp),
     &         psd(ix,0:jxp+1),td(ix,kx,jxp),
     &         phi(ix,kx,0:jxp),xkc(ix,kx,jxp),
     &         difft(ix,kx,jxp),diffq(ix,kx,jxp),difuu(ix,kx,jxp),
     &         difuv(ix,kx,jxp),omega(ix,kx,jxp), qvcs(ix,kx)

      common/tracer/ chic(ix,kx,jxp,ntr),chi(ix,kx,0:jxp+1,ntr)
     &              ,chiten(ix,kx,jxp,ntr)

#else

      common/cvaria/ psc(ix,jx), uc(ix,kx,jx), vc(ix,kx,jx),
     &            tc(ix,kx,jx),qvc(ix,kx,jx),qcc(ix,kx,jx),
     &             u(ix,kx,jx),  v(ix,kx,jx),    t(ix,kx,jx),
     &            qv(ix,kx,jx), qc(ix,kx,jx), qdot(ix,kxp1,jx),
     &          pdota(ix,jx),pten(ix,jx),
     &          uten(ix,kx,jx), vten(ix,kx,jx),   tten(ix,kx,jx),
     &         qvten(ix,kx,jx),qcten(ix,kx,jx),
     &         psd(ix,jx),td(ix,kx,jx),phi(ix,kx,jx),xkc(ix,kx,jx),
     &         difft(ix,kx,jx),diffq(ix,kx,jx),difuu(ix,kx,jx),
     &         difuv(ix,kx,jx),omega(ix,kx,jx), qvcs(ix,kx)

      common/tracer/ chic(ix,kx,jx,ntr),chi(ix,kx,jx,ntr)
     &              ,chiten(ix,kx,jx,ntr)

#endif
