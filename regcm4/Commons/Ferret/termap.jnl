cancel data/all
let iplot=$1%1%
! choose iplot: 1=veg w/ topo contours; 2=topo only

sp ln -sf ../../Input/DOMAIN.INFO .
define symbol filnam DOMAIN.INFO

DEFINE AXIS/X=1:1:1 xax1
DEFINE GRID/X=xax1 gr_out1D
!SUN FILE/VAR=v1,v2,v3,v4,v5/skip=0/GRID=gr_out1D/format=stream/type=i4,i4,r4,r4,r4 ($filnam)
FILE/VAR=v1,v2,v3,v4,v5/swap/skip=0/GRID=gr_out1D/format=stream/type=i4,i4,i4,r4,r4 ($filnam)
list v1, v2, v3, v4, v5

let nx=`v2`
let ny=`v1`
let nx1=1
let ny1=1
let nx2=`nx`
let ny2=`ny`
let dsm=`v4`.
let clat=`v5`
!SUN FILE/VAR=v6,v7,v8,v9/skip=5/GRID=gr_out1D/format=stream/type=r4,r4,r4,i4 ($filnam)
FILE/VAR=v6,v7,v8,v9,v10/swap/skip=5/GRID=gr_out1D/format=stream/type=r4,r4,r4,r4,i4 ($filnam)
let clon=`v6`
let platt=`v7`
let plonn=`v8`
let iproj=`v10/100000000`
list v6, v7, v8, v9, v10

if `iproj eq 12.793` then     ! Lambert Conformal Projection
  go "../../Commons/Ferret/mp_lcc" 1 1 nx ny dsm clat clon
  define symbol aproj Lambert
elif `iproj eq 80` then   ! Polar Stereographic
  Polar Stereographic projection not yet coded up in ferret
elif `iproj eq 13.809 or iproj eq 13.138` then   ! Rotated Mercator
  if `iproj eq 13.138` then
    let platt = 0
  endif
  go "../../Commons/Ferret/mp_rotmer" nx1 ny1 nx2 ny2 dsm clat clon platt plonn
  define symbol aproj Mercator
elif `iproj eq 69` then   ! Equal Area Azimuthal
  Equal Area Azimuthal projection not yet coded up in ferret
endif

DEFINE AXIS/X=1:`nx`:1 xax
DEFINE AXIS/Y=1:`ny`:1 yax
DEFINE GRID/X=xax/Y=yax gr_out2D

!SUN FILE/VAR="head ht htsd lu xlat xlon dlat dlon xmap dmap coriol"/GRID=gr_out2D/format=stream ($filnam)
FILE/swap/VAR="head ht htsd lu xlat xlon dlat dlon xmap dmap coriol"/GRID=gr_out2D/format=stream ($filnam)

let mp_x = my_new_lon
let mp_y = my_new_lat

let xmax=x_page[i=`nx1`:`nx2`@max,j=`ny1`:`ny2`@max]
let xmin=x_page[i=`nx1`:`nx2`@min,j=`ny1`:`ny2`@min]
let ymax=y_page[i=`nx1`:`nx2`@max,j=`ny1`:`ny2`@max]
let ymin=y_page[i=`nx1`:`nx2`@min,j=`ny1`:`ny2`@min]

! set window/aspect=1.0 1


set grid lu
set mode metafile:f.plt
if `iplot eq 1` then
  ppl tics .0,.0,.0,.0
  go mp_aspect
  shade/key/nolabel/hlimit=`xmin`:`xmax`:0/vlimit=`ymin`:`ymax`:0/levels=(0.5,19.5,1) lu, x_page, y_page
  contour/over/nolabel/levels=(0,5000,200) ht, x_page, y_page
  lab/nou `0.5*($ppl$xlen)` `1.05*($ppl$ylen)` 0 0 0.22 @ACGTOPO30 Topography (m) & GLCC Vegetation
elif `iplot eq 2` then
  fill/key/nolabel/pal=inverse_greyscale/levels=(400,2400,400) ht, x_page, y_page
  contour/over/nolabel/levels=(0,3000,200) ht, x_page, y_page
  label 0.0,0.45,0,0,0.22 @ACMM4 Topography (m)
  lab/nou `0.5*($ppl$xlen)` `1.05*($ppl$ylen)` 0 0 0.22 @ACGTOPO30 Topography (m) & Vegetation
endif
let mp_x = my_new_lon
let mp_y = my_new_lat
go mp_land_proj 3 " " 3 3

let dx=my_new_lon[i=@max,j=@max]-my_new_lon[i=@min,j=@min]
let dy=my_new_lat[i=@max,j=@max]-my_new_lat[i=@min,j=@min]
let xint=int(dx/4)-mod(int(dx/4),5)
let yint=int(dy/4)-mod(int(dy/4),5)
let xint=yint
let xmin=int(my_new_lon[i=@min,j=@min]/`xint`)*`xint`-`xint`
let xmax=int(my_new_lon[i=@max,j=@max]/`xint`)*`xint`+`xint`
let ymin=int(my_new_lat[i=@min,j=@min]/`yint`)*`yint`-`yint`
let ymax=int(my_new_lat[i=@max,j=@max]/`yint`)*`yint`+`yint`
go "../../Commons/Ferret/mp_graticulenew" `xmin` `xmax` `xint` `ymin` `ymax` `yint` 3
lab/nou `0.5*($ppl$xlen)` `-0.1*($ppl$ylen)` 0 0 0.18 @ACNX=`nx` NY=`ny` ds=`dsm/1000`km CLAT=`clat` CLON=`clon` ($aproj)
! go cwd


can mode metafile
sp rm -f DOMAIN.INFO

